var = {"key":"data"}
print(var)
print(type(var))
#딕셔너리의 장점 찾는 속도가 빨라진다.

print(var["key"]) # data

var = {"사과": 3000, "키위": 7000}
print(var["키위"]) # "키위"라는 키값을 던져줌으로 "키위"의 데이터값을 던져준다. 7000

del var["사과"] # "사과"라는 키와 데이터를 삭제한다.
print(var) # {'키위': 7000}

var2 = var.keys()
print(var2) #dict_keys(['키위'])

var = {"사과": 3000, "키위": 7000, "딸기": 11000}

var2 = var.keys()
print(var2)  #dict_keys(['사과', '키위', '딸기'])
var3 = list(var) # 리스트로 형변환
print(var3) # ['사과', '키위', '딸기']

var1 = {"사과": 3000, "키위": 7000, "딸기": 11000}
var2 = var1.keys() # var2는 var1의 키들만 뽑아오는 것
print(var2) # dict_keys(['사과','키위','딸기'])
var1 ["수박"] = 13000 #var1에 수박을 추가해줬다.
print(var1) # {'사과': 3000, '키위': 7000, '딸기': 11000, '수박': 13000}
print(var2) 
# var2는 var1의 키값들을 뽑아오기 때문에 dict_keys(['사과', '키위', '딸기', '수박']) 이렇게 출력된다.
# var1에 수박을 추가해줬으므로 같은 주소를 공유하기때문에 수박이 추가된 것을 알 수 있다.

var3 = list(var1) #리스트형태로 형변환
print(var3) #['사과', '키위', '딸기', '수박']
var3 = list(var1) # var1을 리스트형태로 형변환
var1 ["망고"] = 23000 # var1에 망고를 추가해줬다.
print(var3) 
# var1을 리스트형태로 형변환시킨 var3에선 "망고"가 추가되지 않은것을 확인할 수 있다.
# ['사과', '키위', '딸기', '수박']

var1 = {"사과": 3000, "키위": 7000, "딸기": 11000}

var2 = var1.keys() # var1 의 키값들 (사과,키위,딸기)
var1["수박"] = 13000 # var1에 수박을 추가
print(var2) #dict_keys(['사과', '키위', '딸기', '수박'])


# 만약 데이터를 추가하고 싶지않다면 var1값을 리스트로 형변환해주면된다.
var2 = list(var1) # var1을 리스트형태로 형변환 
var1["망고"] = 23000 #var1에 망고를추가
print(var2) # 리스트형태로 형변환되었기때문에 var2의 키값에 망고는 추가되지 않았다.(리스트는 주소를 다르게 가진다.)

# 이중 딕셔너리
var1 = {"가격" : 63000, "세일가격" : 48000} 
var2 = {"용과": var1} # 용과가 key가되고 var1이 value가된다.
print(var2) # {"용과": {"가격": 63000, "세일가격": 48000}}
print(var2["용과"]["세일가격"])#48000(용과의 세일가격을 출력해준다.)

var3:dict = var2["용과"] 
print(var3)

price:int = var2["용과"]["가격"] # 가격이 숫자로 나오겠구나 알 수 있음.
print(type(price))

var2["용과"]["세일가격"] = 46000 # 데이터 바꾸기 
print(var2) # {'용과': {'가격': 63000, '세일가격': 46000}}
var2["용과"]["온라인가격"] = 46250 #온라인 가격을 추가해주었다.
print(var2) #{'용과': {'가격': 63000, '세일가격': 46000, '온라인가격': 46250}}

# 만약 용과가 아닌 다른 키값을 넣어주면 에러가 난다.
# var2["스타후르츠"]["세일가격"] = 59000
# print(var2)
# 이럴땐 업데이트를 쓰는 방법이 있다.
var2.update({"스타후르츠":"가격"})
print(var2) #{'용과': {'가격': 63000, '세일가격': 46000, '온라인가격': 46250}, '스타후르츠': '가격'}


var1 = {"오프라인":34000 , "온라인":32000}
var2 = {"용과":var1}

price = var2["용과"]["오프라인"] #34000
# price_error = var2["스타후르츠"]["오프라인"] #KeyError: '스타후르츠'
# var2["스타후르츠"]["오프라인"] = 55000 
# print(var2) #KeyError: '스타후르츠'
# #스타후르츠라는 키값이 애초에 없기때문에 에러가 난다.

star = {"스타후르츠":{"오프라인": 78000, "온라인": 67000}}
var2.update(star) #var2에 star를 업데이트해준다.
print(var2)